// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package digitalid_sdk.actions;

import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import com.mendix.systemwideinterfaces.core.IMendixObject;

/**
 * This java action converts an object and all associated object to JSON automatically. For 1-1, 1-*, *-* with the currently iterated object the owner of the associations, a key is created with the fully qualified relation name in the domain model (e.g. Module.Relation). The value will be either an object or an array.
 * 
 * Todo: handle reverse associations and filtering (in terms of what you would like to keep and skip module wise, relation wise, etc.) as well as safety measures to avoid infinite loop serialization
 */
public class JA_Object_toJSON extends CustomJavaAction<java.lang.String>
{
	private IMendixObject obj;

	public JA_Object_toJSON(IContext context, IMendixObject obj)
	{
		super(context);
		this.obj = obj;
	}

	@java.lang.Override
	public java.lang.String executeAction() throws Exception
	{
		// BEGIN USER CODE
		com.mendix.thirdparty.org.json.JSONObject jsonobj=new com.mendix.thirdparty.org.json.JSONObject();
		java.util.Map<com.mendix.systemwideinterfaces.core.IMendixIdentifier,com.mendix.systemwideinterfaces.core.IMendixIdentifier>map=new java.util.HashMap<com.mendix.systemwideinterfaces.core.IMendixIdentifier,com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		duplicate(this.getContext(),obj,map,jsonobj);
		String jsonString=jsonobj.toString(2);
		return jsonString;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "JA_Object_toJSON";
	}

	// BEGIN EXTRA CODE
	private void duplicate(IContext ctx,com.mendix.systemwideinterfaces.core.IMendixObject obj,java.util.Map<com.mendix.systemwideinterfaces.core.IMendixIdentifier,com.mendix.systemwideinterfaces.core.IMendixIdentifier>map,com.mendix.thirdparty.org.json.JSONObject jsonobj)throws com.mendix.core.CoreException{
		java.util.Map<String,?extends com.mendix.systemwideinterfaces.core.IMendixObjectMember<?>>members=obj.getMembers(ctx);
		if(map.containsKey(obj.getId()))return;
		map.put(obj.getId(),obj.getId());
		String type=obj.getType()+"/"; 
		for(String key:members.keySet()){
			//com.mendix.core.Core.getLogger(this.toString()).info(key);
			com.mendix.systemwideinterfaces.core.IMendixObjectMember<?>m=members.get(key);
			if(m.isVirtual()||m instanceof com.mendix.core.objectmanagement.member.MendixAutoNumber){
				continue;
			}
			if(m instanceof com.mendix.core.objectmanagement.member.MendixObjectReference&&m.getValue(ctx)!=null){
				//com.mendix.core.Core.getLogger(this.toString()).info("type:reference");
				com.mendix.systemwideinterfaces.core.IMendixObject o=com.mendix.core.Core.retrieveId(ctx,((com.mendix.core.objectmanagement.member.MendixObjectReference)m).getValue(ctx));
				com.mendix.thirdparty.org.json.JSONObject ojson=new com.mendix.thirdparty.org.json.JSONObject();
				//duplicate(ctx,o,map,ojson);
				if(ctx!=null && o!=null && map!=null && jsonobj!=null) {
					jsonobj.put(key,ojson);
					duplicate(ctx,o,map,ojson);
				}else {
					continue;
				}

			}else if(m instanceof com.mendix.core.objectmanagement.member.MendixObjectReferenceSet&&m.getValue(ctx)!=null){
				//com.mendix.core.Core.getLogger(this.toString()).info("type:reference set");
				com.mendix.thirdparty.org.json.JSONArray oarr=new com.mendix.thirdparty.org.json.JSONArray();
				jsonobj.put(key,oarr);
				com.mendix.core.objectmanagement.member.MendixObjectReferenceSet rs=(com.mendix.core.objectmanagement.member.MendixObjectReferenceSet)m;
				java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> res=new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
				for(com.mendix.systemwideinterfaces.core.IMendixIdentifier item:rs.getValue(ctx)){
					com.mendix.systemwideinterfaces.core.IMendixObject o=com.mendix.core.Core.retrieveId(ctx,item);
					com.mendix.thirdparty.org.json.JSONObject ojson=new com.mendix.thirdparty.org.json.JSONObject();
					oarr.put(ojson);
					//duplicate(ctx,o,map,ojson);
					if(ctx!=null && o!=null && map!=null && jsonobj!=null) {
						jsonobj.put(key,ojson);
						duplicate(ctx,o,map,ojson);
					}else {
						continue;
					}

				}
			}else if(m instanceof com.mendix.core.objectmanagement.member.MendixAutoNumber){
				//com.mendix.core.Core.getLogger(this.toString()).info("type:autonumber");
				//todo:handle autonumbers
				//todo:handle file documents
			}else{
				//regular types
				//com.mendix.core.Core.getLogger(this.toString()).info("type:reg");
				jsonobj.put(key,m.getValue(ctx));
			}

		}
	}
	// END EXTRA CODE
}
